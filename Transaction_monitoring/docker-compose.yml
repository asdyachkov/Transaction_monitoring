version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    platform: linux/arm64
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: Transaction_monitoring
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transaction_monitoring
    command: ["postgres", "-c", "max_connections=25000"]

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./userlist.txt:/etc/pgbouncer/userlist.txt
    ports:
      - "6432:6432"
    networks:
      - transaction_monitoring
    depends_on:
      - postgres

  redis:
    image: redis:latest
    container_name: redis
    platform: linux/arm64
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - transaction_monitoring

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    platform: linux/arm64
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - transaction_monitoring

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    platform: linux/arm64
    ports:
      - "9092:9092"
    environment:
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - transaction_monitoring

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    platform: linux/arm64
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - transaction_monitoring

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    platform: linux/arm64
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_PASSWORD=admin
      - CLICKHOUSE_DB=Transaction_monitoring
    networks:
      - transaction_monitoring

  mongodb:
    image: mongo:latest
    container_name: mongodb
    platform: linux/arm64
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - transaction_monitoring

  django:
    build:
      context: .
      dockerfile: Dockerfile_Transaction_monitoring
    container_name: django
    platform: linux/arm64
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py create_admin && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - kafka
      - rabbitmq
      - clickhouse
      - mongodb
    networks:
      - transaction_monitoring

  kafka_consumer:
    build:
      context: .
      dockerfile: Dockerfile_kafka_consumer
    container_name: kafka_consumer
    platform: linux/arm64
    restart: always
    depends_on:
      - kafka
      - django
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - transaction_monitoring

  notification_sender:
    build:
      context: .
      dockerfile: Dockerfile_notification_sender
    container_name: notification_sender
    platform: linux/arm64
    restart: always
    depends_on:
      - rabbitmq
      - django
    networks:
      - transaction_monitoring

  transaction_processor:
    build:
      context: .
      dockerfile: Dockerfile_transaction_proccessor
    container_name: transaction_processor
    platform: linux/arm64
    restart: always
    depends_on:
      - clickhouse
      - django
    networks:
      - transaction_monitoring

  load_test_service:
    build:
      context: .
      dockerfile: Dockerfile_load_tester
    container_name: load_test_service
    ports:
      - "8001:8001"
    networks:
      - transaction_monitoring
    depends_on:
      - django

networks:
  transaction_monitoring:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  rabbitmq_data:
  clickhouse_data:
  mongodb_data:
